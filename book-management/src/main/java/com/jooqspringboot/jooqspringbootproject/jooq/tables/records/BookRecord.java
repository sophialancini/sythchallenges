/*
 * This file is generated by jOOQ.
 */
package com.jooqspringboot.jooqspringbootproject.jooq.tables.records;


import com.jooqspringboot.jooqspringbootproject.jooq.tables.Book;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record5<Integer, String, String, String, String> {

    private static final long serialVersionUID = -945692011;

    /**
     * Setter for <code>book.idbook</code>.
     */
    public void setIdbook(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>book.idbook</code>.
     */
    public Integer getIdbook() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>book.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>book.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>book.publisher_name</code>.
     */
    public void setPublisherName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>book.publisher_name</code>.
     */
    public String getPublisherName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>book.publish_date</code>.
     */
    public void setPublishDate(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>book.publish_date</code>.
     */
    public String getPublishDate() {
        return (String) get(3);
    }

    /**
     * Setter for <code>book.language</code>.
     */
    public void setLanguage(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>book.language</code>.
     */
    public String getLanguage() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Book.BOOK.IDBOOK;
    }

    @Override
    public Field<String> field2() {
        return Book.BOOK.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Book.BOOK.PUBLISHER_NAME;
    }

    @Override
    public Field<String> field4() {
        return Book.BOOK.PUBLISH_DATE;
    }

    @Override
    public Field<String> field5() {
        return Book.BOOK.LANGUAGE;
    }

    @Override
    public Integer component1() {
        return getIdbook();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getPublisherName();
    }

    @Override
    public String component4() {
        return getPublishDate();
    }

    @Override
    public String component5() {
        return getLanguage();
    }

    @Override
    public Integer value1() {
        return getIdbook();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getPublisherName();
    }

    @Override
    public String value4() {
        return getPublishDate();
    }

    @Override
    public String value5() {
        return getLanguage();
    }

    @Override
    public BookRecord value1(Integer value) {
        setIdbook(value);
        return this;
    }

    @Override
    public BookRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookRecord value3(String value) {
        setPublisherName(value);
        return this;
    }

    @Override
    public BookRecord value4(String value) {
        setPublishDate(value);
        return this;
    }

    @Override
    public BookRecord value5(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public BookRecord values(Integer value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Integer idbook, String title, String publisherName, String publishDate, String language) {
        super(Book.BOOK);

        set(0, idbook);
        set(1, title);
        set(2, publisherName);
        set(3, publishDate);
        set(4, language);
    }
}
