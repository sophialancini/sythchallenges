/*
 * This file is generated by jOOQ.
 */
package com.jooqspringboot.jooqspringbootproject.jooq;


import com.jooqspringboot.jooqspringbootproject.jooq.tables.Author;
import com.jooqspringboot.jooqspringbootproject.jooq.tables.Auxiliar;
import com.jooqspringboot.jooqspringbootproject.jooq.tables.Book;

import javax.annotation.processing.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index AUTHOR_PRIMARY = Indexes0.AUTHOR_PRIMARY;
    public static final Index AUXILIAR_PRIMARY = Indexes0.AUXILIAR_PRIMARY;
    public static final Index BOOK_PRIMARY = Indexes0.BOOK_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index AUTHOR_PRIMARY = Internal.createIndex("PRIMARY", Author.AUTHOR, new OrderField[] { Author.AUTHOR.IDAUTHOR }, true);
        public static Index AUXILIAR_PRIMARY = Internal.createIndex("PRIMARY", Auxiliar.AUXILIAR, new OrderField[] { Auxiliar.AUXILIAR.AUXID }, true);
        public static Index BOOK_PRIMARY = Internal.createIndex("PRIMARY", Book.BOOK, new OrderField[] { Book.BOOK.IDBOOK }, true);
    }
}
