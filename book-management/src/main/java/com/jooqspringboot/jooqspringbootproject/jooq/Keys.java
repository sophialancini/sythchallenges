/*
 * This file is generated by jOOQ.
 */
package com.jooqspringboot.jooqspringbootproject.jooq;


import com.jooqspringboot.jooqspringbootproject.jooq.tables.Author;
import com.jooqspringboot.jooqspringbootproject.jooq.tables.Auxiliar;
import com.jooqspringboot.jooqspringbootproject.jooq.tables.Book;
import com.jooqspringboot.jooqspringbootproject.jooq.tables.records.AuthorRecord;
import com.jooqspringboot.jooqspringbootproject.jooq.tables.records.AuxiliarRecord;
import com.jooqspringboot.jooqspringbootproject.jooq.tables.records.BookRecord;

import javax.annotation.processing.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AuthorRecord, Integer> IDENTITY_AUTHOR = Identities0.IDENTITY_AUTHOR;
    public static final Identity<AuxiliarRecord, Integer> IDENTITY_AUXILIAR = Identities0.IDENTITY_AUXILIAR;
    public static final Identity<BookRecord, Integer> IDENTITY_BOOK = Identities0.IDENTITY_BOOK;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = UniqueKeys0.KEY_AUTHOR_PRIMARY;
    public static final UniqueKey<AuxiliarRecord> KEY_AUXILIAR_PRIMARY = UniqueKeys0.KEY_AUXILIAR_PRIMARY;
    public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = UniqueKeys0.KEY_BOOK_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AuthorRecord, Integer> IDENTITY_AUTHOR = Internal.createIdentity(Author.AUTHOR, Author.AUTHOR.IDAUTHOR);
        public static Identity<AuxiliarRecord, Integer> IDENTITY_AUXILIAR = Internal.createIdentity(Auxiliar.AUXILIAR, Auxiliar.AUXILIAR.AUXID);
        public static Identity<BookRecord, Integer> IDENTITY_BOOK = Internal.createIdentity(Book.BOOK, Book.BOOK.IDBOOK);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = Internal.createUniqueKey(Author.AUTHOR, "KEY_author_PRIMARY", Author.AUTHOR.IDAUTHOR);
        public static final UniqueKey<AuxiliarRecord> KEY_AUXILIAR_PRIMARY = Internal.createUniqueKey(Auxiliar.AUXILIAR, "KEY_auxiliar_PRIMARY", Auxiliar.AUXILIAR.AUXID);
        public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = Internal.createUniqueKey(Book.BOOK, "KEY_book_PRIMARY", Book.BOOK.IDBOOK);
    }
}
